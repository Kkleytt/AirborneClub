from aiogram.types import InputMediaPhoto, InputMediaDocument, FSInputFile  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤ –≤ Telegram
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä –≤ Telegram
from aiogram.exceptions import TelegramBadRequest  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ —Å Aiogram

import time  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—ã —Ä–∞–±–æ—Ç—ã —Å –≤—Ä–µ–º–µ–Ω–µ–º
import os  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
import datetime  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤—Ä–µ–º–µ–Ω–µ–º
import json  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—ã —Ä–∞–±–æ—Ç—ã —Å JSON-–¥–∞–Ω–Ω—ã–º–∏

images_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'images')  # –†–∞—Å—á–µ—Ç –ø–æ–ª–Ω–æ–≥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø—É—Ç–∏ –¥–æ –ø–∞–ø–∫–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
files_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'files')  # –†–∞—Å—á–µ—Ç –ø–æ–ª–Ω–æ–≥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø—É—Ç–∏ –¥–æ –ø–∞–ø–∫–∏ —Å —Ñ–∞–π–ª–∞–º–∏

# –°—á–∏—Ç—ã–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
with open("config.json", "r") as file:
    CONFIG = json.load(file)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ Log-—Ñ–∞–π–ª
if not os.path.exists(f"./logs/{CONFIG['LOG_FILE']}"):
    open(f"./logs/{CONFIG['LOG_FILE']}", "w").close()


def check_time():
    hour = datetime.datetime.now().hour

    if 6 <= hour < 10:
        return "üåÑ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ"
    elif 10 <= hour < 18:
        return "‚òÄÔ∏è –î–æ–±—Ä—ã–π –¥–µ–Ω—å"
    elif 18 <= hour < 23:
        return "üåÜ –î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä"
    else:
        return "üåë –î–æ–±—Ä–æ–π –Ω–æ—á–∏"


async def send_message(bot, db, chat_id, user_nic, user_name, new_text, new_photo=None, new_file=None, keyboard=None, status=True, message_id=None, del_msg=True):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.

    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :param db: –û–±—ä–µ–∫—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    :param chat_id: ID —á–∞—Ç–∞
    :param user_nic: –ù–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param user_name:  –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param message_id: ID —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param new_text: –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    :param new_photo: –ü—É—Ç—å –∫ –Ω–æ–≤–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é (–∏–ª–∏ None, –µ—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –Ω—É–∂–Ω–æ)
    :param new_file: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É (–∏–ª–∏ None, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω—É–∂–µ–Ω)
    :param keyboard: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ InlineKeyboardMarkup (–∏–ª–∏ None)
    :param status: –ü–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –ø–æ–ø—ã—Ç–∫–∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    :param del_msg: –ü–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ—à–ª–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    """

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω message_id
    await bot.delete_message(chat_id, message_id) if message_id else None

    try:
        previous_message_id = db.get_message(chat_id)  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –≤ –ë–î
        if previous_message_id is None:  # –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await error(bot, text=f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –ë–î, —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id} @{user_nic} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ë–î", crit=True)

            kb = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="menu")]])
            new_msg = await bot.send_message(chat_id, text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑", reply_markup=kb)
            if new_msg:
                db.save_full_message(chat_id, new_msg.message_id, user_nic, user_name, datetime.datetime.now().strftime("%Y:%m:%d:%H:%M"))
            return
    except Exception as ex:  # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–º–∞–Ω–¥—ã –≤ –ë–î
        await error(bot, text=f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –ë–î - {ex}", crit=True)
        kb = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data="menu")]])
        await bot.send_message(chat_id, text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑", reply_markup=kb)
        time.sleep(5)

        # –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –º–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
    if previous_message_id and status:
        try:
            if new_photo:  # –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–æ—Ç–æ
                photo_file = FSInputFile(path=os.path.join(images_dir, new_photo))  # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–µ—Ä–µ–¥ –≤—Å—Ç–∞–≤–∫–æ–π
                await bot.edit_message_media(
                    chat_id=chat_id,
                    message_id=previous_message_id,
                    media=InputMediaPhoto(
                        media=photo_file,
                        caption=str(new_text),
                        parse_mode="MarkdownV2"  # –£–∫–∞–∑–∞–Ω–∏–µ —Å—Ç–∏–ª—è —Ä–∞–∑–º–µ—Ç–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, MarkdownV2)
                    ),
                    reply_markup=keyboard
                )
            elif new_file:  # –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–º
                doc_file = FSInputFile(path=os.path.join(files_dir, new_file))
                await bot.edit_message_media(
                    chat_id=chat_id,
                    message_id=previous_message_id,
                    media=InputMediaDocument(
                        media=doc_file,
                        caption=str(new_text),
                        parse_mode="MarkdownV2"  # –£–∫–∞–∑–∞–Ω–∏–µ —Å—Ç–∏–ª—è —Ä–∞–∑–º–µ—Ç–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, MarkdownV2)
                    ),
                    reply_markup=keyboard
                )
            else:  # –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º
                await bot.edit_message_text(chat_id=chat_id, message_id=previous_message_id,
                                            text=new_text, reply_markup=keyboard, parse_mode="MarkdownV2")
            return  # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ, –≤—ã—Ö–æ–¥–∏–º

        except TelegramBadRequest as ex:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ Aiogram
            await error(bot, text=f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {ex}", crit=False)

        except Exception as e:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—ã—Ö –æ—à–∏–±–æ–∫
            await error(bot, text=f"‚ùå –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞: {e}", crit=False)

        # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å ‚Äî —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await bot.delete_message(chat_id, previous_message_id)
        except Exception as ex:
            await error(bot, text=f"Error in module send_message - {ex}")

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
    file_extension = os.path.splitext(new_file)[1].lower() if new_file else None
    document_types = {".pdf", ".doc", ".docx", ".pptx", ".ppt", ".zip", ".rar", ".7z", ".tar", ".gz"}

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if new_photo:
        photo_file = FSInputFile(path=os.path.join(images_dir, new_photo))
        if del_msg is True:
            await bot.delete_message(chat_id, previous_message_id)
        new_msg = await bot.send_photo(chat_id=chat_id, photo=photo_file, caption=new_text,
                                       reply_markup=keyboard, parse_mode="MarkdownV2")
    elif new_file and file_extension in document_types:
        doc_file = FSInputFile(path=os.path.join(files_dir, new_file))
        if del_msg is True:
            await bot.delete_message(chat_id, previous_message_id)
        new_msg = await bot.send_document(chat_id=chat_id, document=doc_file, caption=new_text,
                                          reply_markup=keyboard, parse_mode="MarkdownV2")
    else:
        if del_msg is True:
            await bot.delete_message(chat_id, previous_message_id)
        new_msg = await bot.send_message(chat_id=chat_id, text=new_text,
                                         reply_markup=keyboard, parse_mode="MarkdownV2")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ë–î
    db.save_full_message(chat_id, new_msg.message_id, user_nic, user_name, datetime.datetime.now().strftime("%Y:%m:%d:%H:%M"))


async def log(text, logging=True):
    timestamp = datetime.datetime.now().strftime("%d.%m.%Y - %H:%M:%S")  # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ 01.01.1990 - 16:38

    if logging:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ Log-—Ñ–∞–π–ª
        today = datetime.datetime.now().strftime("%Y-%m-%d")  # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –¥–∞—Ç—É

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å log-—Ñ–∞–π–ª
        if CONFIG["LOG_FILE"] != f"{today}-data.log":
            CONFIG["LOG_FILE"] = f"{today}-data.log"  # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ –Ω–æ–≤–æ–µ

            # –ò–∑–º–µ–Ω—è–µ–º –≤ –∫–æ–Ω—Ñ–∏–≥–µ –Ω–∞–∑–≤–∞–Ω–∏–µ log-—Ñ–∞–π–ª–∞
            with open("config.json", "w", encoding="utf-8") as f:
                json.dump(CONFIG, f, indent=4)

            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π log-—Ñ–∞–π–ª
            open(f"./logs/{CONFIG['LOG_FILE']}", "w").close()

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        with open(f"./logs/{CONFIG['LOG_FILE']}", "a", encoding="utf-8") as f:
            f.write(f"[{timestamp}] {text}\n")
    print(f"[{timestamp}] {text}")  # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å


async def error(bot, text, crit=False):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –æ—à–∏–±–æ–∫ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :param text: –¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    :param crit: –ü–∞—Ä–∞–º–µ—Ç—Ä –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
    """
    await log(text=text, logging=True)
    if CONFIG["SEND_ALL_NOTIFICATIONS"] == "True":
        await bot.send_message(chat_id=CONFIG["ADMIN"], text=text, parse_mode="None")
    elif CONFIG["SEND_CRITICAL_NOTIFICATIONS"] == "True" and crit is True:
        await bot.send_message(chat_id=CONFIG["ADMIN"], text=text, parse_mode="None")
    return None
