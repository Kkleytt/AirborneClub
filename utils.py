from aiogram.types import InputMediaPhoto, InputMediaDocument, FSInputFile  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤ –≤ Telegram
from aiogram.exceptions import TelegramBadRequest  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ —Å Aiogram

import time  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—ã —Ä–∞–±–æ—Ç—ã —Å –≤—Ä–µ–º–µ–Ω–µ–º
import os  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
import datetime  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤—Ä–µ–º–µ–Ω–µ–º
import commentjson as json  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—ã —Ä–∞–±–æ—Ç—ã —Å JSON-–¥–∞–Ω–Ω—ã–º–∏

images_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'images')  # –†–∞—Å—á–µ—Ç –ø–æ–ª–Ω–æ–≥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø—É—Ç–∏ –¥–æ –ø–∞–ø–∫–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
files_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'files')  # –†–∞—Å—á–µ—Ç –ø–æ–ª–Ω–æ–≥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø—É—Ç–∏ –¥–æ –ø–∞–ø–∫–∏ —Å —Ñ–∞–π–ª–∞–º–∏

# –°—á–∏—Ç—ã–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
with open('config.json', 'r', encoding='utf-8') as file:
    settings = json.load(file)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ Log-—Ñ–∞–π–ª
if not os.path.exists(f'./logs/{settings['log_file']}'):
    open(f'./logs/{settings['log_file']}', 'w').close()


def check_time():
    hour = datetime.datetime.now().hour

    if 6 <= hour < 10:
        return "üåÑ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ"
    elif 10 <= hour < 18:
        return "‚òÄÔ∏è –î–æ–±—Ä—ã–π –¥–µ–Ω—å"
    elif 18 <= hour < 23:
        return "üåÜ –î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä"
    else:
        return "üåë –î–æ–±—Ä–æ–π –Ω–æ—á–∏"


async def send_message(bot, cache, chat_id, user_nic, user_name, new_text, new_photo=None, new_file=None, keyboard=None, status=True, message_id=None, del_msg=True):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :param cache: –û–±—ä–µ–∫—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param chat_id: ID —á–∞—Ç–∞
    :param user_nic: –ù–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param user_name:  –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param message_id: ID —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param new_text: –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    :param new_photo: –ü—É—Ç—å –∫ –Ω–æ–≤–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é (–∏–ª–∏ None, –µ—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –Ω—É–∂–Ω–æ)
    :param new_file: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É (–∏–ª–∏ None, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω—É–∂–µ–Ω)
    :param keyboard: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ InlineKeyboardMarkup (–∏–ª–∏ None)
    :param status: –ü–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –ø–æ–ø—ã—Ç–∫–∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    :param del_msg: –ü–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ—à–ª–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    """

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω message_id
    if message_id:
        await bot.delete_message(chat_id, message_id)

    # –ü–æ–ª—É—á–µ–Ω–∏–µ UNIX –≤—Ä–µ–º–µ–Ω–∏
    query_timestamp = time.time()

    # –ü–æ–¥—Å—á–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è
    if chat_id in cache:
        all_query = cache[chat_id]['total_query'] if 'total_query' in cache[chat_id] else 0
        previous_message_id = cache[chat_id]['last_message_id'] if 'last_message_id' in cache[chat_id] else None
    else:
        all_query = 0
        previous_message_id = None

    # –ï—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç (—Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–µ)
    if previous_message_id is None:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–π –æ—à–∏–±–∫–∏
        new_msg = await bot.send_message(
            chat_id, text=new_text,
            reply_markup=keyboard
        )

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ö–≠–® –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
        cache[chat_id] = {
            'last_message_id': new_msg.message_id,
            'user_nic': user_nic,
            'user_name': user_name,
            'user_rank': 0 if chat_id != 685865278 else 2,
            'last_date': query_timestamp,
            'total_query': all_query + 1
        }
        return cache

    # –ï—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å (–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è)
    if previous_message_id and status:
        try:
            if new_photo:  # –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–æ—Ç–æ
                photo_file = FSInputFile(path=os.path.join(images_dir, new_photo))  # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–µ—Ä–µ–¥ –≤—Å—Ç–∞–≤–∫–æ–π
                await bot.edit_message_media(
                    chat_id=chat_id,
                    message_id=previous_message_id,
                    media=InputMediaPhoto(
                        media=photo_file,
                        caption=str(new_text),
                        parse_mode="MarkdownV2"  # –£–∫–∞–∑–∞–Ω–∏–µ —Å—Ç–∏–ª—è —Ä–∞–∑–º–µ—Ç–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, MarkdownV2)
                    ),
                    reply_markup=keyboard
                )
            elif new_file:  # –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–º
                doc_file = FSInputFile(path=os.path.join(files_dir, new_file))
                await bot.edit_message_media(
                    chat_id=chat_id,
                    message_id=previous_message_id,
                    media=InputMediaDocument(
                        media=doc_file,
                        caption=str(new_text),
                        parse_mode="MarkdownV2"  # –£–∫–∞–∑–∞–Ω–∏–µ —Å—Ç–∏–ª—è —Ä–∞–∑–º–µ—Ç–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, MarkdownV2)
                    ),
                    reply_markup=keyboard
                )
            else:  # –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º
                await bot.edit_message_text(chat_id=chat_id, message_id=previous_message_id,
                                            text=new_text, reply_markup=keyboard, parse_mode="MarkdownV2")

            # –î–æ–ø–æ–ª–Ω—è–µ–º –ö–≠–® –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É —Ñ—É–Ω–∫—Ü–∏–∏
            cache[chat_id] = {
                'last_message_id': previous_message_id,
                'user_nic': user_nic,
                'user_name': user_name,
                'user_rank': cache[chat_id]['user_rank'],
                'last_date': query_timestamp,
                'total_query': all_query + 1
            }
            return cache

        except TelegramBadRequest as ex:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ Aiogram
            await error(bot, text=f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {ex}", crit=False)

        except Exception as e:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—ã—Ö –æ—à–∏–±–æ–∫
            await error(bot, text=f"‚ùå –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞: {e}", crit=False)

        # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å ‚Äî —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await bot.delete_message(chat_id, previous_message_id)
        except Exception as ex:
            await error(bot, text=f"Error in module send_message - {ex}")

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
    file_extension = os.path.splitext(new_file)[1].lower() if new_file else None
    document_types = {".pdf", ".doc", ".docx", ".pptx", ".ppt", ".zip", ".rar", ".7z", ".tar", ".gz"}

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if new_photo:
        if del_msg is True:
            try:
                await bot.delete_message(chat_id, previous_message_id)
            except Exception as ex:
                await error(bot, text=f"–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä–æ–µ - {ex}")

        photo_file = FSInputFile(path=os.path.join(images_dir, new_photo))
        new_msg = await bot.send_photo(chat_id=chat_id, photo=photo_file, caption=new_text,
                                       reply_markup=keyboard, parse_mode="MarkdownV2")
    elif new_file and file_extension in document_types:
        if del_msg is True:
            try:
                await bot.delete_message(chat_id, previous_message_id)
            except Exception as ex:
                await error(bot, text=f"–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä–æ–µ - {ex}")

        doc_file = FSInputFile(path=os.path.join(files_dir, new_file))
        new_msg = await bot.send_document(chat_id=chat_id, document=doc_file, caption=new_text,
                                          reply_markup=keyboard, parse_mode="MarkdownV2")
    else:
        if del_msg is True:
            try:
                await bot.delete_message(chat_id, previous_message_id)
            except Exception as ex:
                await error(bot, text=f"–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä–æ–µ - {ex}")
        new_msg = await bot.send_message(chat_id=chat_id, text=new_text,
                                         reply_markup=keyboard, parse_mode="MarkdownV2")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫—ç—à
    cache[chat_id] = {
        'last_message_id': new_msg.message_id,
        'user_nic': user_nic,
        'user_name': user_name,
        'user_rank': cache[chat_id]['user_rank'],
        'last_date': query_timestamp,
        'total_query': all_query + 1
    }
    return cache


async def log(text, logging=True):
    timestamp = datetime.datetime.now().strftime("%d.%m.%Y - %H:%M:%S")  # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ 01.01.1990 - 16:38

    if logging:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ Log-—Ñ–∞–π–ª
        today = datetime.datetime.now().strftime("%Y-%m-%d")  # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –¥–∞—Ç—É

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å log-—Ñ–∞–π–ª
        if settings["log_file"] != f"{today}-data.log":
            settings["log_file"] = f"{today}-data.log"  # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ –Ω–æ–≤–æ–µ

            # –ò–∑–º–µ–Ω—è–µ–º –≤ –∫–æ–Ω—Ñ–∏–≥–µ –Ω–∞–∑–≤–∞–Ω–∏–µ log-—Ñ–∞–π–ª–∞
            with open("config.json", "w", encoding="utf-8") as f:
                json.dump(settings, f, indent=4)

            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π log-—Ñ–∞–π–ª
            open(f"./logs/{settings['log_file']}", "w").close()

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        with open(f"./logs/{settings['log_file']}", "a", encoding="utf-8") as f:
            f.write(f"[{timestamp}] {text}\n")
    print(f"[{timestamp}] {text}")  # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å


async def error(bot, text, crit=False):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –æ—à–∏–±–æ–∫ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :param text: –¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    :param crit: –ü–∞—Ä–∞–º–µ—Ç—Ä –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
    """
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π
    await log(text=text, logging=settings['loging'])

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    if settings["notifications"]['all']:
        await bot.send_message(chat_id=settings['notifications']['root_user'], text=text, parse_mode="None")
    elif settings['notifications']['crit'] and crit is True:
        await bot.send_message(chat_id=settings['notifications']['root_user'], text=text, parse_mode="None")
    return None
